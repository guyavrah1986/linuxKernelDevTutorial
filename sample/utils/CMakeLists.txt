# ======================================================================================================================================
# general project settings
# ======================================================================================================================================
cmake_minimum_required(VERSION 3.9)

project(utils)

message(STATUS "processing CMakeLists of project:${CMAKE_PROJECT_NAME} within folder:${CMAKE_CURRENT_LIST_DIR}")

# ======================================================================================================================================
# include directories
# ======================================================================================================================================
include_directories(${CMAKE_CURRENT_LIST_DIR}/../globalIncludeDir)

# ======================================================================================================================================
# group all different utilities into their own group
# ======================================================================================================================================

# configuration manager
file(GLOB_RECURSE BCP_CONF_MGR_SRC
    "${CMAKE_CURRENT_LIST_DIR}/configurationManager.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/configurationManager.h")

# ======================================================================================================================================
# create the different utilities as seperated executables
# ======================================================================================================================================
add_library(utilsLib ${BCP_CONF_MGR_SRC})

# ======================================================================================================================================
# link the utilities with all other needed libraries
# ======================================================================================================================================
# target_link_libraries(utilsLib pthread)

                    
